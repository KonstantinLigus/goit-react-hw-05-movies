{"version":3,"file":"static/js/226.6d6e8095.chunk.js","mappings":"gPAIaA,EAAe,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAE3BC,EAMED,EANFC,YACAC,EAKEF,EALFE,eACAC,EAIEH,EAJFG,aACAC,EAGEJ,EAHFI,aACAC,EAEEL,EAFFK,SACAC,EACEN,EADFM,OAEF,OACE,iCACE,gBAAKC,IAbU,kCAaUN,EAAaO,IAAI,MAC1C,0BACGN,EADH,KACqBC,EAAaM,MAAM,EAAG,GAD3C,QAGA,0CAAkBL,EAAaM,QAAQ,OACvC,sCACA,uBAAIL,KACJ,oCACA,uBAAIC,EAAOK,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,UAG9C,ECMD,EA1BkB,WAAO,IAAD,IACdC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOjB,EAAP,KAAckB,EAAd,KAEMC,EAAgB,qBADLC,EAAAA,EAAAA,MACiBC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAKjD,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeT,GAASU,MAAK,SAAAC,GAAI,OAAIR,EAASQ,EAAKC,KAAlB,GAClC,GAAE,CAACZ,KAGF,iCACE,SAAC,KAAD,CAAMa,GAAIT,EAAV,iCACCnB,IAAS,SAACD,EAAD,CAAcC,MAAOA,KAC/B,SAAC,KAAD,CAAM4B,GAAG,OAAOP,MAAO,CAAEC,KAAMH,GAA/B,mBAGA,SAAC,KAAD,CAAMS,GAAG,UAAUP,MAAO,CAAEC,KAAMH,GAAlC,uBAGA,SAAC,EAAAU,SAAD,CAAUC,UAAU,sCAApB,UACE,SAAC,KAAD,QAIP,C,4MC5BKC,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,+BAClB,IAAMC,EAAgB,mCAAG,oGACXD,IAAAA,IAAA,oCAAuCD,IAD5B,cACxBL,EADwB,yBAEvBA,EAAKC,MAFkB,2CAAH,qDAKhBO,EAAmB,mCAAG,WAAMC,GAAN,uFACdH,IAAAA,IAAA,gCACQD,EADR,kBACyBI,IAFX,cAC3BT,EAD2B,yBAI1BA,EAAKC,MAJqB,2CAAH,sDAMnBH,EAAc,mCAAG,WAAMT,GAAN,uFACRiB,IAAAA,IAAA,iBAAoBjB,EAApB,oBAAuCgB,IAD/B,cACtB/B,EADsB,yBAErBA,GAFqB,2CAAH,sDAIdoC,EAAoB,mCAAG,WAAMrB,GAAN,uFACfiB,IAAAA,IAAA,iBAAoBjB,EAApB,4BAA+CgB,IADhC,cAC5BM,EAD4B,yBAE3BA,EAAKV,MAFsB,2CAAH,sDAIpBW,EAAuB,mCAAG,WAAMvB,GAAN,uFACfiB,IAAAA,IAAA,iBACVjB,EADU,4BACiBgB,IAFF,cAC/BQ,EAD+B,yBAI9BA,GAJ8B,2CAAH,qD","sources":["components/MovieDetails.jsx","pages/MoviePage.jsx","services/fetchMovies.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w300';\n\nexport const MovieDetails = ({ movie }) => {\n  const {\n    poster_path,\n    original_title,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  } = movie;\n  return (\n    <>\n      <img src={BASE_IMG_URL + poster_path} alt=\"\" />\n      <h3>\n        {original_title} ({release_date.slice(0, 4)})\n      </h3>\n      <p>Vote average: {vote_average.toFixed(2)}</p>\n      <h3>Overview</h3>\n      <p>{overview}</p>\n      <h3>Genres</h3>\n      <p>{genres.map(genre => genre.name).join(', ')}</p>\n    </>\n  );\n};\n\nMovieDetails.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    original_title: PropTypes.string,\n    release_date: PropTypes.string,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.array,\n  }),\n};\n","import { useState, Suspense } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { fetchMovieById } from 'services/fetchMovies';\nimport { MovieDetails } from 'components/MovieDetails';\nimport { useEffect } from 'react';\n\nconst MoviePage = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const backToMoviesList = location.state?.from ?? '/';\n  useEffect(() => {\n    fetchMovieById(movieId).then(resp => setMovie(resp.data));\n  }, [movieId]);\n\n  return (\n    <>\n      <Link to={backToMoviesList}>Back to movies list</Link>\n      {movie && <MovieDetails movie={movie} />}\n      <Link to=\"cast\" state={{ from: backToMoviesList }}>\n        Cast\n      </Link>\n      <Link to=\"reviews\" state={{ from: backToMoviesList }}>\n        Previews\n      </Link>\n      <Suspense fallback={<p>Loading...</p>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MoviePage;\n","import axios from 'axios';\n\nconst API_KEY = 'd09586658ff77be7f5ce53c1437aa9f2';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nexport const fetchDailyMovies = async () => {\n  const resp = await axios.get(`/trending/all/day?api_key=${API_KEY}`);\n  return resp.data;\n};\n\nexport const fetchMoviesBySearch = async query => {\n  const resp = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return resp.data;\n};\nexport const fetchMovieById = async movieId => {\n  const movie = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  return movie;\n};\nexport const fetchCastOfMovieById = async movieId => {\n  const cast = await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}`);\n  return cast.data;\n};\nexport const fetchReviewsOfMovieById = async movieId => {\n  const reviews = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return reviews;\n};\n"],"names":["MovieDetails","movie","poster_path","original_title","release_date","vote_average","overview","genres","src","alt","slice","toFixed","map","genre","name","join","movieId","useParams","useState","setMovie","backToMoviesList","useLocation","state","from","useEffect","fetchMovieById","then","resp","data","to","Suspense","fallback","API_KEY","axios","fetchDailyMovies","fetchMoviesBySearch","query","fetchCastOfMovieById","cast","fetchReviewsOfMovieById","reviews"],"sourceRoot":""}