{"version":3,"file":"static/js/247.83ab1882.chunk.js","mappings":"kMAoCA,UA9Ba,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAIA,OAHAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAqBN,GAASO,MAAK,SAAAC,GAAI,OAAIJ,EAAQI,EAAKL,KAAjB,GACxC,GAAE,CAACH,KAEF,+BAEI,wBACGG,EAAKM,MAAM,EAAG,GAAGC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACpB,2BACE,gBACEC,IACEH,EAhBG,kCAiBgBA,EACf,uIAENI,IAAKH,KAEP,uBAAIA,KACJ,uCAAeC,OAVRH,EADW,OAkB/B,C,4MChCKM,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,+BAClB,IAAMC,EAAgB,mCAAG,oGACXD,IAAAA,IAAA,oCAAuCD,IAD5B,cACxBT,EADwB,yBAEvBA,EAAKY,MAFkB,2CAAH,qDAKhBC,EAAmB,mCAAG,WAAMC,GAAN,uFACdJ,IAAAA,IAAA,gCACQD,EADR,kBACyBK,IAFX,cAC3Bd,EAD2B,yBAI1BA,EAAKY,MAJqB,2CAAH,sDAMnBG,EAAc,mCAAG,WAAMvB,GAAN,uFACRkB,IAAAA,IAAA,iBAAoBlB,EAApB,oBAAuCiB,IAD/B,cACtBO,EADsB,yBAErBA,GAFqB,2CAAH,sDAIdlB,EAAoB,mCAAG,WAAMN,GAAN,uFACfkB,IAAAA,IAAA,iBAAoBlB,EAApB,4BAA+CiB,IADhC,cAC5Bd,EAD4B,yBAE3BA,EAAKiB,MAFsB,2CAAH,sDAIpBK,EAAuB,mCAAG,WAAMzB,GAAN,uFACfkB,IAAAA,IAAA,iBACVlB,EADU,4BACiBiB,IAFF,cAC/BS,EAD+B,yBAI9BA,GAJ8B,2CAAH,qD","sources":["components/Cast/Cast.jsx","services/fetchMovies.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCastOfMovieById } from 'services/fetchMovies';\n\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w200';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  useEffect(() => {\n    fetchCastOfMovieById(movieId).then(resp => setCast(resp.cast));\n  }, [movieId]);\n  return (\n    <>\n      {\n        <ul>\n          {cast.slice(0, 4).map(({ id, profile_path, name, character }) => (\n            <li key={id}>\n              <img\n                src={\n                  profile_path\n                    ? BASE_IMG_URL + profile_path\n                    : 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSCMq4cGfAmaJAYVpXFPLY57EzVip1FTMK-ETQH1aU24VD-bYx5wJ4srHFP99zAgqXBvfQ&usqp=CAU'\n                }\n                alt={name}\n              />\n              <p>{name}</p>\n              <p>Character: {character}</p>\n            </li>\n          ))}\n        </ul>\n      }\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = 'd09586658ff77be7f5ce53c1437aa9f2';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nexport const fetchDailyMovies = async () => {\n  const resp = await axios.get(`/trending/all/day?api_key=${API_KEY}`);\n  return resp.data;\n};\n\nexport const fetchMoviesBySearch = async query => {\n  const resp = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return resp.data;\n};\nexport const fetchMovieById = async movieId => {\n  const movie = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  return movie;\n};\nexport const fetchCastOfMovieById = async movieId => {\n  const cast = await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}`);\n  return cast.data;\n};\nexport const fetchReviewsOfMovieById = async movieId => {\n  const reviews = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return reviews;\n};\n"],"names":["movieId","useParams","useState","cast","setCast","useEffect","fetchCastOfMovieById","then","resp","slice","map","id","profile_path","name","character","src","alt","API_KEY","axios","fetchDailyMovies","data","fetchMoviesBySearch","query","fetchMovieById","movie","fetchReviewsOfMovieById","reviews"],"sourceRoot":""}