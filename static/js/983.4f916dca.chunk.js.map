{"version":3,"file":"static/js/983.4f916dca.chunk.js","mappings":"wMAEaA,E,QAAwBC,GAAAA,GAAH,2G,SCIrBC,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACL,EAAD,UACGG,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,MAApB,OACV,yBACE,UAAC,KAAD,CAAMC,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAA1C,WACE,gBACES,MAAO,IACPC,IACEN,EAZK,kCAacA,EACf,uIAENO,IAAKN,IAENA,MAXIF,EADC,KAkBjB,C,iFCTD,UAdiB,WACf,OAA4BS,EAAAA,EAAAA,UAAS,IAArC,eAAOb,EAAP,KAAec,EAAf,KAKA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAmBC,MAAK,SAAAC,GAAI,OAAIJ,EAAUI,EAAKC,QAAnB,GAC7B,GAAE,KAGD,iCACE,4CACA,SAAC,IAAD,CAAYnB,OAAQA,MAGzB,C,4MCfKoB,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,+BAClB,IAAML,EAAgB,mCAAG,oGACXK,IAAAA,IAAA,oCAAuCD,IAD5B,cACxBE,EADwB,yBAEvBA,EAAKJ,MAFkB,2CAAH,qDAKhBK,EAAmB,mCAAG,WAAMC,GAAN,uFACdH,IAAAA,IAAA,gCACQD,EADR,kBACyBI,IAFX,cAC3BF,EAD2B,yBAI1BA,EAAKJ,MAJqB,2CAAH,sDAMnBO,EAAc,mCAAG,WAAMC,GAAN,uFACRL,IAAAA,IAAA,iBAAoBK,EAApB,oBAAuCN,IAD/B,cACtBO,EADsB,yBAErBA,GAFqB,2CAAH,sDAIdC,EAAoB,mCAAG,WAAMF,GAAN,uFACfL,IAAAA,IAAA,iBAAoBK,EAApB,4BAA+CN,IADhC,cAC5BS,EAD4B,yBAE3BA,EAAKX,MAFsB,2CAAH,sDAIpBY,EAAuB,mCAAG,WAAMJ,GAAN,uFACfL,IAAAA,IAAA,iBACVK,EADU,4BACiBN,IAFF,cAC/BW,EAD+B,yBAI9BA,GAJ8B,2CAAH,qD","sources":["components/MoviesList/MoviesListStyled.styled.jsx","components/MoviesList/MoviesList.jsx","pages/HomePage.jsx","services/fetchMovies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MoviesContainerStyled = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 300px);\n  gap: 15px;\n`;\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { MoviesContainerStyled } from './MoviesListStyled.styled';\n\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w300';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <MoviesContainerStyled>\n      {movies.map(({ id, poster_path, title }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            <img\n              width={300}\n              src={\n                poster_path\n                  ? BASE_IMG_URL + poster_path\n                  : 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSCMq4cGfAmaJAYVpXFPLY57EzVip1FTMK-ETQH1aU24VD-bYx5wJ4srHFP99zAgqXBvfQ&usqp=CAU'\n              }\n              alt={title}\n            />\n            {title}\n          </Link>\n        </li>\n      ))}\n    </MoviesContainerStyled>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      poster_path: PropTypes.string,\n      title: PropTypes.string,\n    })\n  ),\n};\n","import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { fetchDailyMovies } from 'services/fetchMovies';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    fetchDailyMovies().then(data => setMovies(data.results));\n  }, []);\n\n  return (\n    <>\n      <h1>Trending today</h1>\n      <MoviesList movies={movies} />\n    </>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\nconst API_KEY = 'd09586658ff77be7f5ce53c1437aa9f2';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nexport const fetchDailyMovies = async () => {\n  const resp = await axios.get(`/trending/all/day?api_key=${API_KEY}`);\n  return resp.data;\n};\n\nexport const fetchMoviesBySearch = async query => {\n  const resp = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return resp.data;\n};\nexport const fetchMovieById = async movieId => {\n  const movie = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  return movie;\n};\nexport const fetchCastOfMovieById = async movieId => {\n  const cast = await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}`);\n  return cast.data;\n};\nexport const fetchReviewsOfMovieById = async movieId => {\n  const reviews = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return reviews;\n};\n"],"names":["MoviesContainerStyled","styled","MoviesList","movies","location","useLocation","map","id","poster_path","title","to","state","from","width","src","alt","useState","setMovies","useEffect","fetchDailyMovies","then","data","results","API_KEY","axios","resp","fetchMoviesBySearch","query","fetchMovieById","movieId","movie","fetchCastOfMovieById","cast","fetchReviewsOfMovieById","reviews"],"sourceRoot":""}