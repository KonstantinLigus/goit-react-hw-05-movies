{"version":3,"file":"static/js/912.e92701b9.chunk.js","mappings":"uMAKaA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,MAApB,OACV,yBACE,UAAC,KAAD,CAAMC,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAA1C,WACE,gBACES,MAAO,IACPC,IACEN,EAZK,kCAacA,EACf,uIAENO,IAAKN,IAENA,MAXIF,EADC,KAkBjB,C,6GC3BYS,EAAY,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MACpC,OACE,+BACE,kBAAMD,SAAUA,EAAhB,WACE,kBAAOE,KAAK,OAAOC,KAAK,QAAQC,aAAcH,KAC9C,mBAAQC,KAAK,SAAb,uBAIP,E,oBCmBD,EArBmB,WACjB,OAA4CG,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMT,EAAQQ,EAAaE,IAAI,UAC/BC,EAAAA,EAAAA,YAAU,WACJX,IACFY,EAAAA,EAAAA,IAAoBZ,GAAOa,MAAK,SAAAC,GAAI,OAAIR,EAAkBQ,EAAKC,QAA3B,GAEvC,GAAE,CAACf,IAKJ,OACE,iCACE,SAACF,EAAD,CAAWC,SANE,SAAAiB,GACfA,EAAEC,iBACFR,EAAgB,CAAET,MAAOgB,EAAEE,OAAOC,SAASnB,MAAMoB,OAClD,EAGkCpB,MAAOA,IACrCK,EAAegB,OAAS,IAAK,SAACrC,EAAA,EAAD,CAAYC,OAAQoB,MAGvD,C,4MCxBKiB,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,+BAClB,IAAMC,EAAgB,mCAAG,oGACXD,IAAAA,IAAA,oCAAuCD,IAD5B,cACxBG,EADwB,yBAEvBA,EAAKX,MAFkB,2CAAH,qDAKhBF,EAAmB,mCAAG,WAAMZ,GAAN,uFACduB,IAAAA,IAAA,gCACQD,EADR,kBACyBtB,IAFX,cAC3ByB,EAD2B,yBAI1BA,EAAKX,MAJqB,2CAAH,sDAMnBY,EAAc,mCAAG,WAAMC,GAAN,uFACRJ,IAAAA,IAAA,iBAAoBI,EAApB,oBAAuCL,IAD/B,cACtBM,EADsB,yBAErBA,GAFqB,2CAAH,sDAIdC,EAAoB,mCAAG,WAAMF,GAAN,uFACfJ,IAAAA,IAAA,iBAAoBI,EAApB,4BAA+CL,IADhC,cAC5BQ,EAD4B,yBAE3BA,EAAKhB,MAFsB,2CAAH,sDAIpBiB,EAAuB,mCAAG,WAAMJ,GAAN,uFACfJ,IAAAA,IAAA,iBACVI,EADU,4BACiBL,IAFF,cAC/BU,EAD+B,yBAI9BA,GAJ8B,2CAAH,qD","sources":["components/MoviesList.jsx","components/SearchBar.jsx","pages/MoviesPage.jsx","services/fetchMovies.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w300';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(({ id, poster_path, title }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            <img\n              width={300}\n              src={\n                poster_path\n                  ? BASE_IMG_URL + poster_path\n                  : 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSCMq4cGfAmaJAYVpXFPLY57EzVip1FTMK-ETQH1aU24VD-bYx5wJ4srHFP99zAgqXBvfQ&usqp=CAU'\n              }\n              alt={title}\n            />\n            {title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      poster_path: PropTypes.string,\n      title: PropTypes.string,\n    })\n  ),\n};\n","export const SearchBar = ({ onSubmit, query }) => {\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input type=\"text\" name=\"query\" defaultValue={query} />\n        <button type=\"submit\">Serch</button>\n      </form>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchBar } from 'components/SearchBar';\nimport { MoviesList } from 'components/MoviesList';\nimport { fetchMoviesBySearch } from 'services/fetchMovies';\nimport { useEffect } from 'react';\n\nconst MoviesPage = () => {\n  const [searchedMovies, setSearchedMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  useEffect(() => {\n    if (query) {\n      fetchMoviesBySearch(query).then(data => setSearchedMovies(data.results));\n    }\n  }, [query]);\n  const onSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query: e.target.elements.query.value });\n  };\n  return (\n    <>\n      <SearchBar onSubmit={onSubmit} query={query} />\n      {searchedMovies.length > 0 && <MoviesList movies={searchedMovies} />}\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst API_KEY = 'd09586658ff77be7f5ce53c1437aa9f2';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nexport const fetchDailyMovies = async () => {\n  const resp = await axios.get(`/trending/all/day?api_key=${API_KEY}`);\n  return resp.data;\n};\n\nexport const fetchMoviesBySearch = async query => {\n  const resp = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return resp.data;\n};\nexport const fetchMovieById = async movieId => {\n  const movie = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  return movie;\n};\nexport const fetchCastOfMovieById = async movieId => {\n  const cast = await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}`);\n  return cast.data;\n};\nexport const fetchReviewsOfMovieById = async movieId => {\n  const reviews = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return reviews;\n};\n"],"names":["MoviesList","movies","location","useLocation","map","id","poster_path","title","to","state","from","width","src","alt","SearchBar","onSubmit","query","type","name","defaultValue","useState","searchedMovies","setSearchedMovies","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchMoviesBySearch","then","data","results","e","preventDefault","target","elements","value","length","API_KEY","axios","fetchDailyMovies","resp","fetchMovieById","movieId","movie","fetchCastOfMovieById","cast","fetchReviewsOfMovieById","reviews"],"sourceRoot":""}